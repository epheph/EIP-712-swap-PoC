{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "previousBlockhash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/home/dev/code/eip-712-poc/contracts/lib/@uniswap/swap-router-contracts/contracts/interfaces/IMulticallExtended.sol",
    "id": 206,
    "exportedSymbols": {
      "IMulticall": [
        377
      ],
      "IMulticallExtended": [
        205
      ]
    },
    "nodeType": "SourceUnit",
    "src": "45:1483:2",
    "nodes": [
      {
        "id": 175,
        "nodeType": "PragmaDirective",
        "src": "45:24:2",
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".5"
        ]
      },
      {
        "id": 176,
        "nodeType": "PragmaDirective",
        "src": "70:19:2",
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 177,
        "nodeType": "ImportDirective",
        "src": "91:67:2",
        "absolutePath": "/home/dev/code/eip-712-poc/contracts/lib/@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/IMulticall.sol",
        "scope": 206,
        "sourceUnit": 378,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 205,
        "nodeType": "ContractDefinition",
        "src": "302:1225:2",
        "nodes": [
          {
            "id": 192,
            "nodeType": "FunctionDefinition",
            "src": "820:110:2",
            "documentation": {
              "id": 181,
              "nodeType": "StructuredDocumentation",
              "src": "351:464:2",
              "text": "@notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n @dev The `msg.value` should not be trusted for any method callable from multicall.\n @param deadline The time by which this function must be called before failing\n @param data The encoded function data for each of the calls to make to this contract\n @return results The results from each of the calls passed in via data"
            },
            "functionSelector": "5ae401dc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "multicall",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "839:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "857:21:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 184,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "857:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 185,
                    "nodeType": "ArrayTypeName",
                    "src": "857:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:41:2"
            },
            "returnParameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "results",
                  "nodeType": "VariableDeclaration",
                  "scope": 192,
                  "src": "906:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 188,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "906:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 189,
                    "nodeType": "ArrayTypeName",
                    "src": "906:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:24:2"
            },
            "scope": 205,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 204,
            "nodeType": "FunctionDefinition",
            "src": "1382:143:2",
            "documentation": {
              "id": 193,
              "nodeType": "StructuredDocumentation",
              "src": "936:441:2",
              "text": "@notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n @dev The `msg.value` should not be trusted for any method callable from multicall.\n @param previousBlockhash The expected parent blockHash\n @param data The encoded function data for each of the calls to make to this contract\n @return results The results from each of the calls passed in via data"
            },
            "functionSelector": "1f0464d1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "multicall",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "previousBlockhash",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1401:25:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1401:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1428:21:2",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 196,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1428:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 197,
                    "nodeType": "ArrayTypeName",
                    "src": "1428:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1400:50:2"
            },
            "returnParameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 202,
                  "mutability": "mutable",
                  "name": "results",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1501:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 200,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "1501:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 201,
                    "nodeType": "ArrayTypeName",
                    "src": "1501:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1500:24:2"
            },
            "scope": 205,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 179,
              "name": "IMulticall",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 377,
              "src": "334:10:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMulticall_$377",
                "typeString": "contract IMulticall"
              }
            },
            "id": 180,
            "nodeType": "InheritanceSpecifier",
            "src": "334:10:2"
          }
        ],
        "contractDependencies": [
          377
        ],
        "contractKind": "interface",
        "documentation": {
          "id": 178,
          "nodeType": "StructuredDocumentation",
          "src": "160:142:2",
          "text": "@title MulticallExtended interface\n @notice Enables calling multiple methods in a single call to the contract with optional validation"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          205,
          377
        ],
        "name": "IMulticallExtended",
        "scope": 206
      }
    ],
    "license": "GPL-2.0-or-later"
  }
}